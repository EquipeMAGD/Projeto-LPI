#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
#include <conio.h>
#include <dos.h>

int estagio=0, matriz[31][28], barra[31][28];
char nome[7];
//center of axis is set to the top left cornor of the screen
COORD coordi= {0,0};
typedef struct coord{
    int x, y;
} coord;
struct dado
{
    int score;
    char name[7];
};
void mudacor(int i){
        SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), i);

}
int mapa(){
       //Desenho do Mapa
   int i, j,contcomida=0;
   //matriz e ponteiro para desenho do mapa
    char b[31][29],*a[31];
   //Cada ponteiro de 'a' apontando para uma linha de 'b'
        for(i=0; i<31; i++)
            a[i]=b[i];
    if (estagio%3==0){
        a[0] ="311111111111MAGD111111111114";
        a[1] ="2            bb            2";
        a[2] ="2 caad caaad bb caaad caad 2";
        a[3] ="2tb00b b000b bb b000b b00bt2";
        a[4] ="2 faae faaae fe faaae faae 2";
        a[5] ="2                          2";
        a[6] ="2 caad cd caaaaaad cd caad 2";
        a[7] ="2 faae bb faadcaae bb faae 2";
        a[8] ="2      bb    bb    bb      2";
        a[9] ="611114 bfaad bb caaeb 311115";
        a[10]="000002 b000b fe b000b 200000";
        a[11]="000002 bcaae    faadb 200000";
        a[12]="000002 bb0000000000bb 200000";
        a[13]="111115 fe0311aa1140fe 611111";
        a[14]="0        0200000020        0";
        a[15]="111114 cd0611111150cd 311111";
        a[16]="000002 bb0000000000bb 200000";
        a[17]="000002 bfd  caad  ceb 200000";
        a[18]="000002 bce ce00fd fdb 200000";
        a[19]="311115 fe  fadcae  fe 611114";
        a[20]="2            bb            2";
        a[21]="2 caad caaad bb caaad caad 2";
        a[22]="2 fadb faaae fe faaae bcae 2";
        a[23]="2   bb                bb   2";
        a[24]="714 bb cd caaaaaad cd bb 319";
        a[25]="715 fe bb faadcaae bb fe 619";
        a[26]="2      bb    bb    bb      2";
        a[27]="2tcaaaaefaad bb caaefaaaadt2";
        a[28]="2 faaaaaaaae fe faaaaaaaae 2";
        a[29]="2                          2";
        a[30]="6111111111111111111111111115";
    }
    else if(estagio%3==1){
        a[0] ="311111111111MAGD111111111114";
        a[1] ="2t                        t2";
        a[2] ="2 caaaaaaaaaa  aaaaaaaaaad 2";
        a[3] ="2 b                      b 2";
        a[4] ="2 b caaaaaaaaaaaaaaaaaad b 2";
        a[5] ="2 b b                  b b 2";
        a[6] ="2 b b caaaaad  caaaaad b b 2";
        a[7] ="2 b b bcaaadb  bcaaadb b b 2";
        a[8] ="2 b b bb   fe  fe   bb b b 2";
        a[9] ="2 b   bb cd      cd bb   b 2";
        a[10]="2 b b bb bb caad bb bb b b 2";
        a[11]="2 b b bb fe faae fe bb b b 2";
        a[12]="2 b b bb 0000000000 bb b b 2";
        a[13]="2   b bb 0311aa1140 bb b   2";
        a[14]="61115 fe 0200000020 fe 61115";
        a[15]="0        0611111150        0";
        a[16]="31114 cd 0000000000 cd 31114";
        a[17]="2   b bb cd      cd bb b   2";
        a[18]="2 b b bb bb caad bb bb b b 2";
        a[19]="2 b b bb bb b00b bb bb b b 2";
        a[20]="2 b b bb fe faae fe bb b b 2";
        a[21]="2 b b bb            bb b b 2";
        a[22]="2 b   bb   cd  cd   bb   b 2";
        a[23]="2 b b bfaaaeb  bfaaaeb b b 2";
        a[24]="2 b b faaaaae  faaaaae b b 2";
        a[25]="2 b b                  b b 2";
        a[26]="2 b faaaaaaaaaaaaaaaaaae b 2";
        a[27]="2 b                      b 2";
        a[28]="2 faaaaaaaaaa  aaaaaaaaaae 2";
        a[29]="2t                        t2";
        a[30]="6111111111111111111111111115";
    }
//mapa MAGD
        else if(estagio%3==2){
        a[0] ="311111111111MAGD111111111114";
        a[1] ="2                          2";
        a[2] ="2 ca ad              ca ad 2";
        a[3] ="2 b   fd   caaaad   ce   b 2";
        a[4] ="2 b    fd ce    fd ce    b 2";
        a[5] ="2 b     fae      fae     b 2";
        a[6] ="2 b                      b 2";
        a[7] ="2 faaaaaaaaaa  aaaaaaaaaae 2";
        a[8] ="2                          2";
        a[9] ="2 caaa aaaaaaaaaaaaaa aaad 2";
        a[10]="2 b                      b 2";
        a[11]="2 b   caaaaaa  aaaaaad   b 2";
        a[12]="2 b   b              b   b 2";
        a[13]="2 b   fd 0311aa1140 ce   b 2";
        a[14]="0 b   ce 0200000020 fd   b 0";
        a[15]="2 b   b  0611111150  b   b 2";
        a[16]="2 fa                    ae 2";
        a[17]="2    aaaaaaaaa aaaaaaaa    2";
        a[18]="2 b                      b 2";
        a[19]="2 b  caaaaaaaaaaaaaaad   b 2";
        a[20]="2 b  faaaaaaad       b   b 2";
        a[21]="2 b          b           b 2";
        a[22]="2 faaaaa aaaae       faaae 2";
        a[23]="2                          2";
        a[24]="2    caaaaaaa  aaaaaaad    2";
        a[25]="2  cae                fad  2";
        a[26]="2 ce       caaaad       fd 2";
        a[27]="2tb        faaaae        bt2";
        a[28]="2 faaaaaaa aaaaaa aaaaaaae 2";
        a[29]="2                          2";
        a[30]="6111111111111111111111111115";
       }


    //Interpretação dos Códigos e impressão do Mapa
    for(i=0; i<31; i++)
    {
        for(j=0; j<28; j++)
        {
            barra[i][j]=0; // Deixa o mapa completamente livre, para depois pôr barreiras
            switch(a[i][j])
            {
            //Caracteres de linha dupla
            case '1':
                matriz[i][j]=205;
                break;
            case '2':
                matriz[i][j]=186;
                break;
            case '3':
                matriz[i][j]=201;
                break;
            case '4':
                matriz[i][j]=187;
                break;
            case '5':
                matriz[i][j]=188;
                break;
            case '6':
                matriz[i][j]=200;
                break;
            case '7':
                matriz[i][j]=204;
                break;
            case '8':
                matriz[i][j]=203;
                break;
            case '9':
                matriz[i][j]=185;
                break;

            //Caracteres de uma linha
            case 'a':
                matriz[i][j]=196;
                break;
            case 'b':
                matriz[i][j]=179;
                break;
            case 'c':
                matriz[i][j]=218;
                break;
            case 'd':
                matriz[i][j]=191;
                break;
            case 'e':
                matriz[i][j]=217;
                break;
            case 'f':
                matriz[i][j]=192;
                break;

            //NOME
            case 'M':
                matriz[i][j]='M';
                break;
            case 'A':
                matriz[i][j]='A';
                break;
            case 'G':
                matriz[i][j]='G';
                break;
            case 'D':
                matriz[i][j]='D';
                break;

            //Comida normal, especial e espaços vazios
            case 't':
                matriz[i][j]=248;
                break;
            case ' ':
                matriz[i][j]=250;
                break;
            case '0':
                matriz[i][j]=' ';
                break;
            }
            //Mapa sendo impresso


            //Atribuição das barreiras no mapa
            if(i==13 && (j==14 || j==13)){
            mudacor(7);
            putchar(matriz[i][j]);barra[i][j]=2;}
            else if(matriz[i][j]!=250 && matriz[i][j]!=' '&& matriz[i][j]!=248)
                { mudacor(9);
                  putchar(matriz[i][j]);
                    barra[i][j]=1;}
            else if(j==27||j==0)
            {
             mudacor(14);
             putchar(matriz[i][j]);
              barra[i][j]=3;}
            else{
            mudacor(14);
            putchar(matriz[i][j]);}
            if(matriz[i][j]==250||matriz[i][j]==248){
            mudacor(14);
            contcomida=5;
            //putchar(matriz[i][j]);
            }
            //printf("%d",barra[i][j]);
            //Sleep(20);
        }
        putchar('\n');

    }
    return contcomida;
}
void movanima1(int anim){
    int i,j=4,sub=14;
    if (anim>13){
    for(i=0;i<=(anim-sub)*j;i++)putchar(' ');}
  else{
    for(i=0;i<=anim*j;i++)putchar(' ');}
}
void movanima2(int distanc){
    int i;
for(i=0;i<=distanc;i++)putchar(' ');
}
void ajuda(){
    printf("\n\n\t\t\t\t INICIANDO O JOGO:\n\n"
           "\t\t\tPARA INICIAR ESCOLHA A PRIMEIRA OPCAO NO MENU!\n\n"
           "\t\t\t\t PRIMEIRO PASSOS NO JOGO:\n\n"
           "\t\t\t\tUSE AS TECLAS DIRECIONAIS:\n"
           "\t\t\t\t-->\"w\" PARA SE MOVER PRA CIMA."
           "\n\t\t\t\t-->\"a\" PARA SE MOVER PRA ESQUERDA."
           "\n\t\t\t\t-->\"s\" PARA SE MOVER PRA BAIXO."
           "\n\t\t\t\t-->\"d\" PARA SE MOVER PRA DIREITA.\n");
    printf("\t\tpara consultar a pontuacao, escolha a opcao de numero 2 no menu\n\t\tpara sair, escolha a opcao de numero 4 no menu\n");
    printf("\t\t\pressione qualquer tecla para continuar...");
    getch();
    menu();
}
void titulo1(void){
    static int anim_menu1=0,anim=0;
    int i,K,distanc=48;
    anim_menu1++;
    if(anim==17)anim=0;
    if (anim_menu1==3 || anim_menu1==6)anim++;
    if(anim_menu1<=3)//controle de velocidade da animação
    {   mudacor(9+anim_menu1);
        printf("     _______                              __       __\n"
               "    |       \\                            |  \\     /  \\\n"
               "    | $$$$$$$\\ ______    _______         | $$\\   /  $$  ______   _______\n"
               "    | $$__/ $$|      \\  /       \\ ______ | $$$\\ /  $$$ |      \\ |       \\      \n"
               "    | $$    $$ \\$$$$$$\\|  $$$$$$$|      \\| $$$$\\  $$$$  \\$$$$$$\\| $$$$$$$\\\n"
               "    | $$$$$$$ /      $$| $$       \\$$$$$$| $$\\$$ $$ $$ /      $$| $$  | $$\n"
               "    | $$     |  $$$$$$$| $$_____         | $$ \\$$$| $$|  $$$$$$$| $$  | $$ \n"
               "    | $$      \\$$    $$ \\$$     \\        | $$  \\$ | $$ \\$$    $$| $$  | $$\n"
               "     \\$$       \\$$$$$$$  \\$$$$$$$         \\$$      \\$$  \\$$$$$$$ \\$$   \\$$\n\n");

        mudacor(14);
        if(anim>13){
        movanima1(anim);
        printf("    ____");movanima2(distanc);printf("       \n");
        movanima1(anim);
        printf("   /    \\"); movanima2(distanc);printf(" ______\n");
        movanima1(anim);
        printf("  /     /");movanima2(distanc); printf("/      \\\n");
        movanima1(anim);
        printf("  |    / ");movanima2(distanc);  printf("|  ()()|\n");
        movanima1(anim);
        printf("  |    \\ ");for(i=0;i<distanc/4;i++)printf(" O  ");putchar(' '); printf("|      |\n");
        movanima1(anim);
        printf("  \\     \\");movanima2(distanc);printf("|      |\n");
        movanima1(anim);
        printf("   \\____/");movanima2(distanc);printf("|/\\/\\/\\|\n\n");
        }
        else{
         movanima1(anim);printf("       ""       ""   ____\n");
         movanima1(anim);printf(" ______""       ""  /    \\\n");
         movanima1(anim);printf("/      \\""      "" /     /\n");
         movanima1(anim);printf("|  ()()|""      "" |    /\n");// for(i=0;i<anim;i++) // printf(" () "); // putchar(' ');
         for(K=anim*2;K>(anim);K--)printf(" O  ");printf(" ");printf("|      |""      "" |    \\"); // for(i=12;i>anim;i--) // printf(" () ");
         for(i=13;i>anim;i--)printf(" O  ");printf(" O");putchar('\n');
         movanima1(anim);printf("|      |""      "" \\     \\\n");
         movanima1(anim);printf("|/\\/\\/\\|""      ""  \\____/\n\n");

    }}
    if (anim_menu1>3)//controle de velocidade da animação
    { mudacor(9+anim_menu1);
        printf("     _______                             __       __\n"
               "    /       \\                           /  \\     /  |\n"
               "    $$$$$$$  | ______    _______        $$  \\   /$$ |  ______   _______\n"
               "    $$ |__$$ |/      \\  /       |______ $$$  \\ /$$$ | /      \\ /       \\\n"
               "    $$    $$/ $$$$$$  |/$$$$$$$//      |$$$$  /$$$$ | $$$$$$  |$$$$$$$  |\n"
               "    $$$$$$$/  /    $$ |$$ |     $$$$$$/ $$ $$ $$/$$ | /    $$ |$$ |  $$ |\n"
               "    $$ |     /$$$$$$$ |$$ \\_____        $$ |$$$/ $$ |/$$$$$$$ |$$ |  $$ |\n"
               "    $$ |     $$    $$ |$$       |       $$ | $/  $$ |$$    $$ |$$ |  $$ |\n"
               "    $$/       $$$$$$$/  $$$$$$$/        $$/      $$/  $$$$$$$/ $$/   $$/\n\n");
        mudacor(14);
        if(anim>13){

        movanima1(anim);
        printf("   ____ ");movanima2(distanc);printf("       \n");
        movanima1(anim);
        printf("  /    \\ ");movanima2(distanc);printf(" ______\n");
        movanima1(anim);
        printf(" /      \\");movanima2(distanc);printf("/      \\\n");
        movanima1(anim);
        printf(" |   ___|");movanima2(distanc);printf("|  ()()|\n");
        movanima1(anim);
        printf(" |      |");for(i=0;i<distanc/4;i++)printf(" O  ");putchar(' ');printf("|      |\n");
        movanima1(anim);
        printf(" \\      /");movanima2(distanc);printf("|      |\n");
       movanima1(anim);
        printf("  \\____/ ");movanima2(distanc);printf("|\\/\\/\\/|\n\n");
        }
        else{
         movanima1(anim);printf("       ""       ""   ____\n");
         movanima1(anim);printf(" ______""       ""  /    \\\n");
         movanima1(anim);printf("/      \\""      "" /      \\\n");
         movanima1(anim);printf("|  ()()|""      "" |   ___|\n");//for(i=0;i<anim;i++)printf(" () ");putchar(' ');
         for(K=anim*2;K>(anim);K--)printf(" O  ");putchar(' ');printf("|      |""      "" |      | ");//for(i=15;i>anim;i--)printf(" () ");
         for(i=13;i>anim;i--)printf(" O  ");putchar(' ');putchar('\n');
         movanima1(anim);printf("|      |""      "" \\      /\n");
         movanima1(anim);printf("|\\/\\/\\/|""      ""  \\____/\n\n");}
         if(anim_menu1==6)anim_menu1=0;//zerar o contador da animação


    }
}
void gotoxy(int x,int y){
    coordi.X=x;
    coordi.Y=y;
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),coordi);
}
void movimento(int c,int *x,int *y){
     switch(c)
        {
        case 'w':
            *x-=1;
            break;
        case 's':
            *x+=1;
            break;
        case 'a':
            *y-=1;
            break;
        case 'd':
            *y+=1;
            break;}
}
void direcao(int *x, int *y){
    static char c, c2, f,ldpause, d;
    int antgx=*x, antgy=*y;

    fflush(stdin);//????
    if(kbhit())
    {
        d=getch();
        if(d=='w' || d=='s' || d=='a' || d=='d'){
        c2=c;
        c=d;
        f=1;}
    }
    movimento(c,x,y);

    if ((barra[*x][*y]==1 || barra[*x][*y]==2)&& f==1)
    {
        *x=antgx;
        *y=antgy;
        movimento(c2,x,y);
    }
    else f=0;
    if(*y>=27) *y=0;
    else if(*y<=0) *y=27;
    if (barra[*x][*y]==1 ||barra[*x][*y]==2)
    {
        *x=antgx;
        *y=antgy;
    }
}
void dirrand(int *x, int *y,int xpac,int ypac){
    int n, antgx=*x, antgy=*y;
    static int cont=0;

    cont++;
    //Faz seguir o Pacman
    if(*x==xpac || *y==ypac)
    {
        if(*x>xpac && *y==ypac)*x-=1;
        else if(*x<xpac && *y==ypac)*x+=1;
        else if(*y>ypac && *x==xpac)*y-=1;
        else *y+=1;
    }
    else//Move aleatóriamente
    {
        if(cont>12) n=rand()%4;
        else n=0;
        switch(n)
        {
        case 0:
            *x-=1;
            break;
        case 1:
            *x+=1;
            break;
        case 2:
            *y-=1;
            break;
        case 3:
            *y+=1;
            break;
        }
    }
    do
    {
        if(barra[*x][*y]==2) //Barreira especial para a caixa dos fantasmas
        {
            *x-=1;
            dirrand(x,y,0,0);
        }
        else if(barra[*x][*y]==1||barra[*x][*y]==3)//Recurssividade para que o fantasma não fique batendo na parede
        {
            *x=antgx;
            *y=antgy;
            dirrand(x,y,0,0);
        }
        //Dar a volta no mapa
    }
    while(barra[*x][*y]==1||barra[*x][*y]==3);
}

void ranking(void)
{
    struct dado player[10];
    int aux=10, i, j, ajuste=0, NumLin=0;
    char c, control[15];
    FILE *arq;
    arq = fopen("ranking.txt","r");
    if(arq==NULL)
        {
            system("cls");
            printf("\n\n\t\t  NOME\t\t\t\t\tSCORE\n\n");
            while(aux>0){ printf("\t\t  --- . . . . . . . . . . . . . . . . . ---\n\n"); aux--;}
            printf("\n\n\t\tPressione qualquer tecla para voltar ao menu...");
            getch(); menu();
        }
    while((c=fgetc(arq))!=EOF){if(c=='\n' || c=='\r')NumLin++;}
    fclose(arq);
     //PEGAMOS TODOS AS STRINGS DOS 10 JOGADORES
    fopen("ranking.txt","r");
    for(i=0; i<NumLin || i==0; i++)
    {
        for(j=0; j<2; j++)
        {
            if(j==0)
            {
                fscanf(arq,"%i",&player[i].score);
            }
            else if(j==1)
            {
                fgetc(arq); //ANDAMOS UM CARACTERE
                fgets(control, 4, arq);
                fgetc(arq);  //ANDSMOS UM CARACTERE
                strcpy(player[i].name,control);
            }
        }
    }
    fclose(arq);
    //IMPRIMINDO OS JOGADORES
    if(NumLin==0){ajuste++;}
     system("cls");
     printf("\n\n\t\t  NOME\t\t\t\t\tSCORE\n\n");
    for(i=0; i<NumLin+ajuste;i++)
    {
        printf("\t      %d.  %s . . . . . . . . . . . . . . . . . %i\n\n", i+1, player[i].name, player[i].score); aux--;
    }
    printf("\n\t\tPressione qualquer tecla para voltar ao menu...");
    getch();menu();
}

void arquivos(int ponto)
{
    struct dado player[10]; player[0].score=0;
    struct dado tempor1, tempor2;
    struct dado novo;
    int i,j, pontos[10][10], NumLin=0;
    char dados[10][15], control[15], c;

    FILE *file;
    file = fopen("ranking.txt","a");
    fclose(file);
    //DESCOBRIMOS QUANTAS LINHAS TEREMOS
    fopen("ranking.txt","r");
    while((c=fgetc(file))!=EOF){if(c=='\n' || c=='\r')NumLin++;}
   fclose(file);
    fopen("ranking.txt","r");
    //PEGAMOS TODOS AS STRINGS DOS 10 JOGADORES
    for(i=0; i<NumLin || i==0; i++)
    {
        for(j=0; j<2; j++)
        {
            if(j==0)
            {
                fscanf(file,"%i",&player[i].score);
            }
            else if(j==1)
            {
                fgetc(file);
                fgets(control, 4, file); fgetc(file);
                strcpy(player[i].name,control);
            }
        }
    }
    fclose(file);
    //PEGAMOS OS DADOS DO JOGADOR ATUAL
    novo.score=ponto;
    strcpy(novo.name,nome);
    //strcat(novo.name,"\n"); //COLOCAMOS UM CARACTERE PULAR LINHA NO FIM DA STRING
    //ORGANIZANDO EM ORDEMN
    if(NumLin==0){
        if(player[0].score==0)
        {
            player[0].score=novo.score;
            strcpy(player[0].name,novo.name);
        }
    }
    else {for(i=NumLin-1; i>=0; i--)
    {

        if(novo.score<=player[i].score)
        {
            //TROCANDO AS POSIÇÕES
            tempor2.score=novo.score;      strcpy(tempor2.name,novo.name);
        for(j=i+1; j<=NumLin; j++)
        {
            tempor1.score=player[j].score; strcpy(tempor1.name,player[j].name);
            player[j].score=tempor2.score; strcpy(player[j].name,tempor2.name);
            tempor2.score=tempor1.score;   strcpy(tempor2.name,tempor1.name);
        }
            break;
        }
    }
    }
    fopen("ranking.txt","w");

  for(i=0; i<=NumLin; i++)
  {
    fprintf(file,"%i ", player[i].score);
    fputs(player[i].name,file);
    fputc('\n',file);
  }
  fclose(file);
}

void GAMEOVER(int ponto){
    char rp;

    system("cls");
    printf("\n\n\n\n\n\t\tGAME OVER"
           "\n\n\t\tPontuacao:%d"
           "\n\n\tPressione qualquer tecla...\n\n", ponto);
    fflush(stdin);
    getch();
    arquivos(ponto);
  //  ====-------
  // antigo corpo de arquivos
  // -----========
    system("cls");
    printf("\n\n\n\n\n\tPontuacao salva.\n\n\tPressione Qualquer tecla...");
    getch();
    menu();
}
void jogo(int vida){
    int i, j, pis=1, t=50,aux[5],auxy[5], ponto=0,especial[4]={0,0,0,0};
    int contcomida=0,duracaoesp,trocarface;
    coord pm, fant[4];
    system("cls");

    //DEFINIÇÃO DE COORDENADAS INICIAIS
    pm.x=16;
    pm.y=14;
    for(i=0; i<4; i++)
    {
        fant[i].x=14;
        fant[i].y=14;
        aux[i]=fant[i].x;
        auxy[i]=fant[i].y;
    }
    contcomida=mapa();
    gotoxy(14, 16);mudacor(14); putchar('O');
    gotoxy(fant[0].x, fant[0].y);mudacor(12); putchar(182);
    getch();
    fflush(stdin);
    while(1)
    {

            for(i=0; i<4; i++)
            {   if(especial[i])mudacor(9);
                else i==0?mudacor(13):i==1?mudacor(11):i==2?mudacor(12):i==3?mudacor(6):0;
                if(pis%(especial[i]==1?20:(20-estagio))==0){
                auxy[i]=fant[i].y;
                aux[i]=fant[i].x;
                dirrand(&fant[i].x, &fant[i].y,pm.x, pm.y);
                    gotoxy(fant[i].y,fant[i].x);
                    putchar(182);
                    if(fant[i].y!=auxy[i] || fant[i].x!=aux[i])
                    {
                        gotoxy(auxy[i],aux[i]);
                        mudacor(14);
                        printf("%c",matriz[aux[i]][auxy[i]]);
                    }

                if(fant[i].x==pm.x && fant[i].y==pm.y)
                {
                    if(especial[i]==1)
                    {
                        ponto+=100;
                        fant[i].x=14;
                        fant[i].y=14;
                        especial[i]=0;
                    }
                    else if(vida!=0)
                    {
                        vida--;
                        pm.x=16;
                        pm.y=14;
                        for(j=0; j<4; j++)
                        {

                            aux[j]=fant[j].x;
                            auxy[j]=fant[j].y;
                            fant[j].x=14;
                            fant[j].y=14;
                            gotoxy(auxy[j],aux[j]); putchar(matriz[aux[j]][auxy[j]]);
                        }
                    }
                    else GAMEOVER(ponto);
                }
            }
        }
        auxy[4]=pm.y;
        aux[4]=pm.x;
        if(pis%19==0)
        {
            //Informações adicionais na tela
            for(i=3; i>vida; i--)
            {
                gotoxy(3+i, 31); putchar(' ');
            }
            for(i=vida;i>0;i--){
            gotoxy(3+i,31);mudacor(12);
            printf("%c",3);}
            gotoxy(9,31);mudacor(15);
            printf("%s - ",nome);
            gotoxy(15,31);mudacor(15);
            printf("%d",ponto);

            direcao(&pm.x, &pm.y);
             if( (matriz[pm.x][pm.y]==250||matriz[pm.x][pm.y]==248))
                {
                    contcomida--;
                    if(contcomida==0){estagio+=1;jogo(vida);}
                    if(matriz[pm.x][pm.y]==248)
                    {   for(i=0;i<4;i++)
                        especial[i]=1;
                        duracaoesp=0;
                    }
                    else ponto++;
                    matriz[pm.x][pm.y]=' ';
                    mudacor(14);
                    if(trocarface>2){ putchar('C');trocarface++;}
                    gotoxy(pm.y,pm.x);
                    if(pis%10==0){
                            putchar('O');}
                    else if(pis%10!=0){ putchar('C');}
                    if(pm.y!=auxy[4] || pm.x!=aux[4])
                    {
                        gotoxy(auxy[4],aux[4]);
                        putchar(' ');
                    }

                }
                else if( matriz[pm.x][pm.y]==' ')
                {   mudacor(14);
                    gotoxy(pm.y,pm.x);
                    if(pis%40<20) putchar('O');
                    else putchar('C');
                    if(pm.y!=auxy[4] || pm.x!=aux[4])
                    {
                        gotoxy(auxy[4],aux[4]);
                        putchar(' ');
                    }
                }
              for(i=0; i<4; i++)  {
                if(fant[i].x==pm.x && fant[i].y==pm.y)
                {
                    if(especial[i]==1)
                    {
                        ponto+=100;
                        fant[i].x=14;
                        fant[i].y=14;
                        especial[i]=0;
                    }
                   else if(vida!=0)
                    {
                        vida--;
                       // gotoxy(pm.x,pm.y); putchar(matriz[pm.x][pm.y]);
                        pm.x=16;
                        pm.y=14;
                        for(j=0; j<4; j++)
                        {

                            aux[j]=fant[j].x;
                            auxy[j]=fant[j].y;
                            fant[j].x=14;
                            fant[j].y=14;
                            gotoxy(auxy[j],aux[j]); putchar(matriz[aux[j]][auxy[j]]);
                        }
                    }
                   else GAMEOVER(ponto);
                }
              }
        }

        Sleep(10);
        pis++;
        duracaoesp++;
        if(duracaoesp==750){
                for(i=0;i<4;i++)
                especial[i]=0;}
        if(trocarface>4)trocarface=0;
    }
}
void menu(){
    char ast[4]={'>',' ',' '}, dir;
    int n=0, cont=0;
    while(1)
    {
        system("cls");
        titulo1();
        mudacor(15);

        printf("\n\n\t\t\t\t%c Jogar\n"
               "\t\t\t\t%c Pontuacoes\n"
               "\t\t\t\t%c Ajuda\n"
               "\t\t\t\t%c Sair\n",ast[0], ast[1], ast[2],ast[3] );
        fflush(stdin);
        if(kbhit())
        {Beep(700,50);
            dir=getch();
            if(dir=='w' && n!=0)
            {
                ast[n]=' ';
                n--;
                ast[n]='>';
            }
            else if(dir=='s' && n!=3)
            {
                ast[n]=' ';
                n++;
                ast[n]='>';
            }
            else if(dir=='\n'||dir=='\r')
            {   putchar ('\7');
                if(n==0)
                {
                    while(1){
                    system("cls"); titulo1(); mudacor(15);
                    printf("\n\n\t\tDigite seu nome em 3 letras:\n\t\t\t\t");
                    fflush(stdin);
                    if(kbhit())
                    {
                      gets(nome);

                      jogo(3);
                    } Sleep(100);
                    }
                }
                else if(n==1)
                {
                ranking();
                }
                else if(n==2){
                    system("cls");
                    ajuda();
                }
                else if(n==3)
                {
                    system("cls");
                    exit(1);
                }
            }
        }
        Sleep(100);
    }
}
void main (){
    menu();
}
