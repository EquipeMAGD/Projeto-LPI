#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
#include <conio.h>
#include <dos.h>

int estagio=0, matriz[31][28], barra[31][28];

//center of axis is set to the top left cornor of the screen
COORD coordi= {0,0};

typedef struct coord
{
    int x, y;
} coord;

void titulo(void)
{
    static int anim_menu=0;
    anim_menu++;
    printf("   _______                              __       __\n"
           "  |       \\                            |  \\     /  \\\n"
           "  | $$$$$$$\\ ______    _______         | $$\\   /  $$  ______   _______\n"
           "  | $$__/ $$|      \\  /       \\ ______ | $$$\\ /  $$$ |      \\ |       \\       \n"
           "  | $$    $$ \\$$$$$$\\|  $$$$$$$|      \\| $$$$\\  $$$$  \\$$$$$$\\| $$$$$$$\\\n"
           "  | $$$$$$$ /      $$| $$       \\$$$$$$| $$\\$$ $$ $$ /      $$| $$  | $$\n"
           "  | $$     |  $$$$$$$| $$_____         | $$ \\$$$| $$|  $$$$$$$| $$  | $$ \n"
           "  | $$      \\$$    $$ \\$$     \\        | $$  \\$ | $$ \\$$    $$| $$  | $$\n"
           "   \\$$       \\$$$$$$$  \\$$$$$$$         \\$$      \\$$  \\$$$$$$$ \\$$   \\$$\n\n");
    if(anim_menu%2==0)
    {
        printf("\t\t\t   ____\n"
               "\t\t\t  /    \\\n"
               "\t\t\t /     /\n"
               "\t\t\t |    /\n"
               "\t\t\t |    \\()  ()  ()  ()  ()  ()\n"
               "\t\t\t \\     \\\n"
               "\t\t\t  \\____/\n\n");
    }
    else
    {
        printf("\t\t\t   ____\n"
               "\t\t\t  /    \\\n"
               "\t\t\t /      \\\n"
               "\t\t\t |   ___|\n"
               "\t\t\t |      | ()  ()  ()  ()  ()  ()\n"
               "\t\t\t \\      /\n"
               "\t\t\t  \\____/\n\n");
    }
}

void titulo1(void)
{
    static int anim_menu1=0,anim=0;
    int i,j=4,sub=14,distanc=45;
    anim_menu1++;
    if(anim==17)anim=0;
    if (anim_menu1==3 || anim_menu1==6)anim++;
    if(anim_menu1<=3)//controle de velocidade da animação
    {
        printf("   _______                              __       __\n"
               "  |       \\                            |  \\     /  \\\n"
               "  | $$$$$$$\\ ______    _______         | $$\\   /  $$  ______   _______\n"
               "  | $$__/ $$|      \\  /       \\ ______ | $$$\\ /  $$$ |      \\ |       \\       \n"
               "  | $$    $$ \\$$$$$$\\|  $$$$$$$|      \\| $$$$\\  $$$$  \\$$$$$$\\| $$$$$$$\\\n"
               "  | $$$$$$$ /      $$| $$       \\$$$$$$| $$\\$$ $$ $$ /      $$| $$  | $$\n"
               "  | $$     |  $$$$$$$| $$_____         | $$ \\$$$| $$|  $$$$$$$| $$  | $$ \n"
               "  | $$      \\$$    $$ \\$$     \\        | $$  \\$ | $$ \\$$    $$| $$  | $$\n"
               "   \\$$       \\$$$$$$$  \\$$$$$$$         \\$$      \\$$  \\$$$$$$$ \\$$   \\$$\n\n");
        if(anim>13){
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf("    ____");for(i=0;i<=distanc;i++)putchar(' ');printf("       \n");
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf("   /    \\"); for(i=0;i<=distanc;i++)putchar(' ');printf(" ______\n");
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf("  /     /");for(i=0;i<=distanc;i++)putchar(' ');  printf("/      \\\n");
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf("  |    / ");for(i=0;i<=distanc;i++)putchar(' ');   printf("|  ()()|\n");
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf("  |    \\ ");for(i=0;i<=distanc;i++)putchar(' ');  printf("|      |\n");
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf("  \\     \\");for(i=0;i<=distanc;i++)putchar(' ');printf("|      |\n");
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf("   \\____/");for(i=0;i<=distanc;i++)putchar(' ');printf("|/\\/\\/\\|\n\n");
        }
        else{
         for(i=0;i<=anim*j;i++)putchar(' ');printf("       ""       ""   ____\n");
         for(i=0;i<=anim*j;i++)putchar(' ');printf(" ______""       ""  /    \\\n");
         for(i=0;i<=anim*j;i++)putchar(' ');printf("/      \\""      "" /     /\n");
         for(i=0;i<=anim*j;i++)putchar(' ');printf("|  ()()|""      "" |    /\n");// for(i=0;i<anim;i++) // printf(" () "); // putchar(' ');
         for(i=0;i<=anim*j;i++)putchar(' ');printf("|      |""      "" |    \\\n"); // for(i=12;i>anim;i--) // printf(" () ");
         for(i=0;i<=anim*j;i++)putchar(' ');printf("|      |""      "" \\     \\\n");
         for(i=0;i<=anim*j;i++)putchar(' ');printf("|/\\/\\/\\|""      ""  \\____/\n\n");

    }}
    if (anim_menu1>3)//controle de velocidade da animação
    {
        printf("   _______                             __       __\n"
               "  /       \\                           /  \\     /  |\n"
               "  $$$$$$$  | ______    _______        $$  \\   /$$ |  ______   _______\n"
               "  $$ |__$$ |/      \\  /       |______ $$$  \\ /$$$ | /      \\ /       \\\n"
               "  $$    $$/ $$$$$$  |/$$$$$$$//      |$$$$  /$$$$ | $$$$$$  |$$$$$$$  |\n"
               "  $$$$$$$/  /    $$ |$$ |     $$$$$$/ $$ $$ $$/$$ | /    $$ |$$ |  $$ |\n"
               "  $$ |     /$$$$$$$ |$$ \\_____        $$ |$$$/ $$ |/$$$$$$$ |$$ |  $$ |\n"
               "  $$ |     $$    $$ |$$       |       $$ | $/  $$ |$$    $$ |$$ |  $$ |\n"
               "  $$/       $$$$$$$/  $$$$$$$/        $$/      $$/  $$$$$$$/ $$/   $$/\n\n");

        if(anim>13){
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf("   ____ ");for(i=0;i<=distanc;i++)putchar(' ');printf("       \n");
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf("  /    \\ ");for(i=0;i<=distanc;i++)putchar(' ');printf(" ______\n");
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf(" /      \\");for(i=0;i<=distanc;i++)putchar(' ');printf("/      \\\n");
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf(" |   ___|");for(i=0;i<=distanc;i++)putchar(' ');printf("|  ()()|\n");
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf(" |      |");for(i=0;i<=distanc;i++)putchar(' ');printf("|      |\n");
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf(" \\      /");for(i=0;i<=distanc;i++)putchar(' ');printf("|      |\n");
        for(i=0;i<=(anim-sub)*j;i++)putchar(' ');
        printf("  \\____/ ");for(i=0;i<=distanc;i++)putchar(' ');printf("|/\\/\\/\\|\n\n");
        }
        else{
         for(i=0;i<=anim*j;i++)putchar(' ');printf("       ""       ""   ____\n");
         for(i=0;i<=anim*j;i++)putchar(' ');printf(" ______""       ""  /    \\\n");
         for(i=0;i<=anim*j;i++)putchar(' ');printf("/      \\""      "" /      \\\n");
         for(i=0;i<=anim*j;i++)putchar(' ');printf("|  ()()|""      "" |   ___|\n");//for(i=0;i<anim;i++)printf(" () ");putchar(' ');
         for(i=0;i<=anim*j;i++)putchar(' ');printf("|      |""      "" |      | \n");//for(i=15;i>anim;i--)printf(" () ");
         for(i=0;i<=anim*j;i++)putchar(' ');printf("|      |""      "" \\      /\n");
         for(i=0;i<=anim*j;i++)putchar(' ');printf("|\\/\\/\\/|""      ""  \\____/\n\n");}
         if(anim_menu1==6)anim_menu1=0;//zerar o contador da animação


    }
}

void gotoxy(int x,int y)
{
    coordi.X=x;
    coordi.Y=y;
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),coordi);
}
void movimento(int c,int *x,int *y)
{
     switch(c)
        {
        case 'w':
            *x-=1;
            break;
        case 's':
            *x+=1;
            break;
        case 'a':
            *y-=1;
            break;
        case 'd':
            *y+=1;
            break;}
}
void direcao(int *x, int *y)
{
    static char c, c2, f;
    int antgx=*x, antgy=*y;

    fflush(stdin);//????
    if(kbhit())
    {
        c2=c;
        c=getch();
        f=1;
    }
    movimento(c,x,y);

    if ((barra[*x][*y]==1 || barra[*x][*y]==2)&& f==1)
    {
        *x=antgx;
        *y=antgy;
        movimento(c2,x,y);

    }
    else f=0;
    if(*y==27) *y=0;
    else if(*y==0) *y=27;
    if (barra[*x][*y]==1 ||barra[*x][*y]==2)
    {
        *x=antgx;
        *y=antgy;
    }
}

void dirrand(int *x, int *y,int xpac,int ypac)
{
    int n, antgx=*x, antgy=*y;
    static int cont=0;

    cont++;
    //Faz seguir o Pacman
    if(*x==xpac || *y==ypac)
    {
        if(*x>xpac && *y==ypac)*x-=1;
        else if(*x<xpac && *y==ypac)*x+=1;
        else if(*y>ypac && *x==xpac)*y-=1;
        else *y+=1;
    }
    else//Move aleatóriamente
    {
        if(cont>12) n=rand()%4;
        else n=0;
        switch(n)
        {
        case 0:
            *x-=1;
            break;
        case 1:
            *x+=1;
            break;
        case 2:
            *y-=1;
            break;
        case 3:
            *y+=1;
            break;
        }
    }
    do
    {
        if(barra[*x][*y]==2) //Barreira especial para a caixa dos fantasmas
        {
            *x-=1;
            dirrand(x,y,0,0);
        }
        else if(barra[*x][*y]==1)//Recurssividade para que o fantasma não fique batendo na parede
        {
            *x=antgx;
            *y=antgy;
            dirrand(x,y,0,0);
        }
        //Dar a volta no mapa
        if(*y==27) *y=0;
        else if(*y==0) *y=27;
    }
    while(barra[*x][*y]==1);
}

void GAMEOVER(int ponto)
{
    char nome[20];
    char rp;

    system("cls");
    printf("\n\n\n\n\n\t\tGAME OVER"
           "\n\n\t\tPontuacao:%d"
           "\n\n\tPressione qualquer tecla...\n\n", ponto);
    fflush(stdin);
    getch();

    FILE *file;
    file = fopen("ranking.txt","a");
    printf("\tDigite seu nome: ");
    gets(nome);
    fputs(nome,file);
    fprintf(file," ---  %i", ponto);
    fputc('\n',file);
    fclose(file);
    system("cls");
    printf("\n\n\n\n\n\tPontuacao salva.\n\n\tPressione Qualquer tecla...");
    getch();
    menu();
}

void jogo(int nivel)
{
    int i, j, pis=1, t=50,aux[4],auxy[4], ponto=0,especial=0;
    int contcomida=0,duracaoesp,trocarface;
    coord pm, fant[3];

    //matriz e ponteiro para desenho do mapa
    char b[31][29],*a[31];

    system("cls");

    //DEFINIÇÃO DE COORDENADAS INICIAIS
    pm.x=16;
    pm.y=14;
    for(i=0; i<3; i++)
    {
        fant[i].x=14;
        fant[i].y=14;
        aux[i]=14;
        auxy[i]=fant[i].y;
    }

    {//Desenho do Mapa
        //Cada ponteiro de 'a' apontando para uma linha de 'b'
        for(i=0; i<31; i++)
            a[i]=b[i];

        a[0] ="311111111111MAGD111111111114";
        a[1] ="2            bb            2";
        a[2] ="2 caad caaad bb caaad caad 2";
        a[3] ="2tb00b b000b bb b000b b00bt2";
        a[4] ="2 faae faaae fe faaae faae 2";
        a[5] ="2                          2";
        a[6] ="2 caad cd caaaaaad cd caad 2";
        a[7] ="2 faae bb faadcaae bb faae 2";
        a[8] ="2      bb    bb    bb      2";
        a[9] ="611114 bfaad bb caaeb 311115";
        a[10]="000002 b000b fe b000b 200000";
        a[11]="000002 bcaae    faadb 200000";
        a[12]="000002 bb0000000000bb 200000";
        a[13]="111115 fe0311aa1140fe 611111";
        a[14]="0        0200000020        0";
        a[15]="111114 cd0611111150cd 311111";
        a[16]="000002 bb0000000000bb 200000";
        a[17]="000002 bfd  caad  ceb 200000";
        a[18]="000002 bce ce00fd fdb 200000";
        a[19]="311115 fe  fadcae  fe 611114";
        a[20]="2            bb            2";
        a[21]="2 caad caaad bb caaad caad 2";
        a[22]="2 fadb faaae fe faaae bcae 2";
        a[23]="2   bb                bb   2";
        a[24]="714 bb cd caaaaaad cd bb 319";
        a[25]="715 fe bb faadcaae bb fe 619";
        a[26]="2      bb    bb    bb      2";
        a[27]="2tcaaaaefaad bb caaefaaaadt2";
        a[28]="2 faaaaaaaae fe faaaaaaaae 2";
        a[29]="2                          2";
        a[30]="6111111111111111111111111115";
    }

    //Interpretação dos Códigos e impressão do Mapa
    for(i=0; i<31; i++)
    {
        for(j=0; j<28; j++)
        {
            barra[i][j]=0; // Deixa o mapa completamente livre, para depois pôr barreiras
            switch(a[i][j])
            {
            //Caracteres de linha dupla
            case '1':
                matriz[i][j]=205;
                break;
            case '2':
                matriz[i][j]=186;
                break;
            case '3':
                matriz[i][j]=201;
                break;
            case '4':
                matriz[i][j]=187;
                break;
            case '5':
                matriz[i][j]=188;
                break;
            case '6':
                matriz[i][j]=200;
                break;
            case '7':
                matriz[i][j]=204;
                break;
            case '8':
                matriz[i][j]=203;
                break;
            case '9':
                matriz[i][j]=185;
                break;

            //Caracteres de uma linha
            case 'a':
                matriz[i][j]=196;
                break;
            case 'b':
                matriz[i][j]=179;
                break;
            case 'c':
                matriz[i][j]=218;
                break;
            case 'd':
                matriz[i][j]=191;
                break;
            case 'e':
                matriz[i][j]=217;
                break;
            case 'f':
                matriz[i][j]=192;
                break;

            //NOME
            case 'M':
                matriz[i][j]='M';
                break;
            case 'A':
                matriz[i][j]='A';
                break;
            case 'G':
                matriz[i][j]='G';
                break;
            case 'D':
                matriz[i][j]='D';
                break;

            //Comida normal, especial e espaços vazios
            case 't':
                matriz[i][j]=248;
                break;
            case ' ':
                matriz[i][j]=250;
                break;
            case '0':
                matriz[i][j]=' ';
                break;
            }
            //Mapa sendo impresso
            putchar(matriz[i][j]);

            //Atribuição das barreiras no mapa
            if(i==13 && (j==14 || j==15)) barra[i][j]=2;
            else if(matriz[i][j]!=250 && matriz[i][j]!=' '&& matriz[i][j]!=248) barra[i][j]=1;
            if(matriz[i][j]==250||matriz==248)contcomida++;
        }
        putchar('\n');
    }

    gotoxy(14, 16); putchar('O');
    gotoxy(fant[0].x, fant[0].y); putchar(182);

    getch();
    fflush(stdin);
    while(1)
    {
        //system("cls");
        if(pis%(especial==1?4:(3-estagio))==0)
        {
            for(i=0; i<3; i++)
            {
                auxy[i]=fant[i].y;
                aux[i]=fant[i].x;
                dirrand(&fant[i].x, &fant[i].y,pm.x, pm.y);
                if(fant[i].x==pm.x && fant[i].y==pm.y)
                {
                    if(especial==1)
                    {
                        ponto+=100;
                        fant[i].x=14;
                        fant[i].y=14;
                    }
                    else GAMEOVER(ponto);
                }
            }
        }
        auxy[3]=pm.y;
        aux[3]=pm.x;
        if(pis%3==0)
        {
            direcao(&pm.x, &pm.y);
        }
        //printf("Pontuacao: %d\n", ponto);
        for(i=0; i<31; i++)
        {
            for(j=0; j<28; j++)
            {

                if( (matriz[i][j]==250||matriz[i][j]==248) && i==pm.x && j==pm.y)
                {
                    contcomida--;
                    if(contcomida==0)jogo(estagio+=1);
                    if(matriz[i][j]==248)
                    {
                        especial=1;
                        duracaoesp=0;
                    }
                    else ponto++;
                    matriz[i][j]=' ';

                    //if(trocarface>2){ putchar('C');trocarface++;}
                    gotoxy(pm.y,pm.x);
                    if(pis%10==0) putchar('O');
                    else if(pis%10!=0) putchar('C');
                    if(pm.y!=auxy[3] || pm.x!=aux[3])
                    {
                        gotoxy(auxy[3],aux[3]);
                        putchar(' ');
                    }

                }
                else if( matriz[i][j]==' ' && i==pm.x && j==pm.y)
                {
                    gotoxy(pm.y,pm.x);
                    if(pis%10==0) putchar('O');
                    else if(pis%10!=0) putchar('C');
                    if(pm.y!=auxy[3] || pm.x!=aux[3])
                    {
                        gotoxy(auxy[3],aux[3]);
                        putchar(' ');
                    }
                }
                else if(i==fant[0].x && j==fant[0].y)
                {
                    gotoxy(fant[0].y,fant[0].x);
                    putchar(182);
                    if(fant[0].y!=auxy[0] || fant[0].x!=aux[0])
                    {
                        gotoxy(auxy[0],aux[0]);
                        printf("%c",matriz[aux[0]][auxy[0]]);
                    }
                } //fantasma
                else if(i==fant[1].x && j==fant[1].y)
                {
                    gotoxy(fant[1].y,fant[1].x);
                    putchar(182);
                    if(fant[1].y!=auxy[1] || fant[1].x!=aux[1])
                    {
                        gotoxy(auxy[1],aux[1]);
                        printf("%c",matriz[aux[1]][auxy[1]]);
                    }
                } //fantasma
                else if(i==fant[2].x && j==fant[2].y)
                {
                    gotoxy(fant[2].y,fant[2].x);
                    putchar(182);
                    if(fant[2].y!=auxy[2] || fant[2].x!=aux[2])
                    {
                        gotoxy(auxy[2],aux[2]);
                        printf("%c",matriz[aux[2]][auxy[2]]);
                    }
                }  //fantasma
                // else printf("%c", matriz[i][j]);
            }
            //  putchar('\n');

        }
        for(i=0; i<3; i++)
        {
            if(fant[i].x==pm.x && fant[i].y==pm.y)
            {
                if(especial==1)
                {
                    ponto+=100;
                    fant[i].x=14;
                    fant[i].y=14;

                }
                else GAMEOVER(ponto);
            }
        }
        Sleep(43);
        pis++;
        duracaoesp++;
        if(duracaoesp==100 && especial==1)especial=0;
        if(trocarface>4)trocarface=0;
    }
}

void menu()
{
    char ast[3]={'>',' ',' '}, dir;
    int n=0;
    while(1)
    {
        system("cls");
        titulo1();
        printf("\n\n\t\t\t%c Jogar\n"
               "\t\t\t%c Pontuacoes\n"
               "\t\t\t%c Sair\n",ast[0], ast[1], ast[2] );
        fflush(stdin);
        if(kbhit())
        {
            dir=getch();
            if(dir=='w' && n!=0)
            {
                ast[n]=' ';
                n--;
                ast[n]='>';
            }
            else if(dir=='s' && n!=2)
            {
                ast[n]=' ';
                n++;
                ast[n]='>';
            }
            else if(dir==' ')
            {
                if(n==0) jogo(estagio);
                //else if(n==1)
                else if(n==2)
                {
                    system("cls");
                    exit(1);
                }
            }
        }
        Sleep(100);
    }
}


void main ()
{
    menu();
}
